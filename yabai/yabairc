
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus"
# Unload the macOS WindowManager process
# launchctl unload -F /System/Library/LaunchAgents/com.apple.WindowManager.plist > /dev/null 2>&1 &

yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus"
yabai -m signal --add event=display_added action="sleep 2 && $HOME/.config/yabai/create_spaces.sh"
yabai -m signal --add event=display_removed action="sleep 1 && $HOME/.config/yabai/create_spaces.sh"
yabai -m signal --add event=window_created action="sketchybar --trigger windows_on_spaces"
yabai -m signal --add event=window_destroyed action="sketchybar --trigger windows_on_spaces"

yabai -m signal --add event=application_front_switched action="yabai -m window --sub-layer normal"



$HOME/.config/yabai/create_spaces.sh


# default layout (can be bsp, stack or float)
yabai -m config layout bsp

yabai -m rule --add app=".*" sub-layer=normal
yabai -m rule --apply

yabai -m config window_border off
yabai -m config window_border_width        2
yabai -m config window_border_hidpi        off
yabai -m config window_border_radius       12
yabai -m config window_border_blur         off
yabai -m config active_window_border_color 0xff8aadf4
yabai -m config normal_window_border_color 0xff494d64
yabai -m config insert_feedback_color      0xff9dd274

# Status bar
yabai -m config external_bar               all:-3:0

# New window spawns to the right if vertical split, or bottom if horizontal split
yabai -m config window_placement second_child

# padding set to 12px
yabai -m config top_padding 6
yabai -m config bottom_padding 6
yabai -m config left_padding 6
yabai -m config right_padding 6
yabai -m config window_gap 6


# center mouse on window with focus
# yabai -m config mouse_follows_focus on
yabai -m config focus_follows_mouse autofocus


# modifier for clicking and dragging with mouse
yabai -m config mouse_modifier fn
# set modifier + left-click drag to move window
yabai -m config mouse_action1 move
# set modifier + right-click drag to resize window
yabai -m config mouse_action2 resize


# when window is dropped in center of another window, swap them (on edges it will split it)
yabai -m mouse_drop_action swap


yabai -m rule --add app="^(LuLu|Calculator|Software Update|Dictionary|VLC|System Preferences|System Settings|Photo Booth|Archive Utility|Python|LibreOffice|App Store|Steam|Alfred|Activity Monitor)$" manage=off
#yabai -m rule --add label="Finder" app="Finder" title="(Co(py|nnect)|Move|Info|Pref)" manage=off
#yabai -m rule --add app="Finder" manage=off
yabai -m rule --add app="Path Finder" manage=on
yabai -m rule --add label="Safari" app="^Safari$" title="^(General|(Tab|Password|Website|Extension)s|AutoFill|Se(arch|curity)|Privacy|Advance)$" manage=off
yabai -m rule --add label="About This Mac" app="System Information" title="About This Mac" manage=off
yabai -m rule --add label="Select file to save to" app="^Inkscape$" title="Select file to save to" manage=off
yabai -m rule --add app="^PureVPN$" manage=off
yabai -m rule --add app="^Pritunl" sub-layer=above manage=off
#yabai -m rule --add app="^Preview$" manage=off
yabai -m rule --add app="^Calendar$" title="(General|^$)" manage=off
yabai -m rule --add app="^iStat"  manage=off
yabai -m rule --add label="DataGrip" app="^DataGrip$" title="^(Rename|Modify|Data Sources|Database Color|Settings)" manage=off
yabai -m rule --add app="^IINA" manage=off
yabai -m rule --add app="^Stats$" manage=off
yabai -m rule --add app="^Disk Utility" sub-layer=above manage=off
yabai -m rule --add app="^Transmission$" sub-layer=above manage=off
#yabai -m rule --add app="^Adobe" manage=off
#yabai -m rule --add app="^InDesign" manage=off
yabai -m rule --add app="^Bitwarden" sticky=on manage=off sub-layer=above
# yabai -m rule --add app="^MacDown" manage=off
yabai -m rule --add app="^Stickies" manage=off
yabai -m rule --add app="^Engine DJ" manage=off
yabai -m rule --add app="^OneTagger" manage=off
yabai -m rule --add app="^rekordbox" manage=off
#yabai -m rule --add app="^Luminar Neo" manage=off
yabai -m rule --add app="Notes" manage=off
yabai -m rule --add app="AnkerWork" manage=off
yabai -m rule --add app="Parallels" manage=off
#yabai -m rule --add app="^Microsoft Excel" manage=off
#yabai -m rule --add app="^Microsoft Word" manage=off
#yabai -m rule --add app="^Archicad"  manage=off



#yabai -m rule --add app="^Microsoft Teams" manage=off

yabai -m rule --add app="^Affinity Photo" manage=off
yabai -m rule --add app="^â‰ˆ" title="^Vivaldi Settings" manage=off

yabai -m rule --add app="^zoom.us" sub-layer=above manage=off
yabai -m rule --add app="Epic*" manage=off
yabai -m rule --add app="Twinmotion*" manage=off
yabai -m rule --add app="Adobe*" manage=off

yabai -m rule --add app="Fonts*" manage=off
yabai -m rule --add app="Font Book" manage=off

# disable focus_follows_mouse when a Zoom window is focused
yabai -m signal --add event=window_focused app=^zoom.us$ action="yabai -m config focus_follows_mouse off"
# renable focus_follows_mouse autofocus after Zoom meeting is finished
yabai -m signal --add event=application_front_switched app=^zoom.us$ action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=application_terminated app=^zoom.us$ action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=application_hidden app=^zoom.us$ action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=window_destroyed app=^zoom.us$ action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=window_minimized app=^zoom.us$ action="yabai -m config focus_follows_mouse autofocus"




# disable focus_follows_mouse when a Adobes app window is focused
yabai -m signal --add event=window_focused app=^Adobe action="yabai -m config focus_follows_mouse off"
# renable focus_follows_mouse autofocus after Adobe meeting is finished
yabai -m signal --add event=application_front_switched app=^Adobe action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=application_terminated app=^Adobe action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=application_hidden app=^Adobe action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=window_destroyed app=^Adobe action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=window_minimized app=^Adobe action="yabai -m config focus_follows_mouse autofocus"



# disable focus_follows_mouse when a Twinmotion app window is focused
yabai -m signal --add event=window_focused app=^Twinmotion action="yabai -m config focus_follows_mouse off"
# renable focus_follows_mouse autofocus after Twinmotion meeting is finished
yabai -m signal --add event=application_front_switched app=^Twinmotion action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=application_terminated app=^Twinmotion action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=application_hidden app=^Twinmotion action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=window_destroyed app=^Twinmotion action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=window_minimized app=^Twinmotion action="yabai -m config focus_follows_mouse autofocus"

# disable focus_follows_mouse when a Archicad app window is focused
yabai -m signal --add event=window_focused app=^Archicad action="yabai -m config focus_follows_mouse off"
# renable focus_follows_mouse autofocus after Archicad meeting is finished
yabai -m signal --add event=application_front_switched app=^Archicad action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=application_terminated app=^Archicad action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=application_hidden app=^Archicad action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=window_destroyed app=^Archicad action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=window_minimized app=^Archicad action="yabai -m config focus_follows_mouse autofocus"

# disable focus_follows_mouse when a DaVinci app window is focused
yabai -m signal --add event=window_focused app=^DaVinci action="yabai -m config focus_follows_mouse off"
# renable focus_follows_mouse autofocus after DaVinci meeting is finished
yabai -m signal --add event=application_front_switched app=^DaVinci action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=application_terminated app=^DaVinci action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=application_hidden app=^DaVinci action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=window_destroyed app=^DaVinci action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=window_minimized app=^DaVinci action="yabai -m config focus_follows_mouse autofocus"

# disable focus_follows_mouse when a Microsoft Excel app window is focused
yabai -m signal --add event=window_focused app="^Microsoft Excel" action="yabai -m config focus_follows_mouse off"
# renable focus_follows_mouse autofocus after Microsoft Excel meeting is finished
yabai -m signal --add event=application_front_switched app="^Microsoft Excel" action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=application_terminated app="^Microsoft Excel" action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=application_hidden app="^Microsoft Excel" action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=window_destroyed app="^Microsoft Excel" action="yabai -m config focus_follows_mouse autofocus"
yabai -m signal --add event=window_minimized app="^Microsoft Excel" action="yabai -m config focus_follows_mouse autofocus"

yabai -m config window_opacity on
yabai -m config window_opacity_duration 0.0
yabai -m config active_window_opacity 1.0
yabai -m config normal_window_opacity 0.9


